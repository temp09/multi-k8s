Hello, and welcome to Edge Security configuring TLS on a message processor. To complete this lesson, you should also have completed the keys, certificates, keystores in and TLS lesson. In this video, we'll cover prerequisites, creating an obfuscated password, creating and securing a keystore, and finally, configuring the Edge Message Processor. In order to configure TLS, port 8082 should be open between each router and message processor in each region. In order to test, perform a curl from each router to every message processor. The curl shown on screen, should return a UUID for each message processor being tested. Parts of the later configuration, requires writing an obfuscated password to a configuration file. Using obfuscation is obviously, a much more secure alternative to writing a password out in plain text. Edge comes with Jetty utilities that can create a correctly obfuscated password. Onscreen, you can see the command which references the jetty-util JAR file, and has the password you want to obfuscate as its final argument. The output is also shown. You'll see the password parsed in as well as the obfuscated version. A keystore should be created as previously described, containing the private key for the server and an appropriately signed certificate. The keystore should be copied to a location accessible by the Apigee user. In this example, we are copying it to the customer application directory and the Apigee installation directory. By doing this, we're following the pattern of placing all our custom configuration in a single place. Once a keystore is copied, the owner and group should be changed to Apigee and the permissions changed appropriately. Having now created the keystore on the obfuscated password, we can now configure the message processors. To do this, we again use code with config. The configuration shown should be appended to messageprocessor.properties in the customer application directory. If the file does not already exist, then it should be created. Stepping through the configuration, we set SSL to true. Next, we specify the port the message processor should run on, we set the keystore type to JKS, and provide the full path to the keystore. The key alias is set to the same value as when the keystore was created. And finally, we use the obfuscated version of the keystore password. This configuration should be applied to all message processors. Once complete, a rolling restart of the routers and message processors is required. This concludes configuring TLS on a message processor. For more information, you can visit docs.apigee.com. And to get involved in the community, please go to community.apigee.com. Thank you.