In this lab, you created two managed instance groups in the us-central1 region along with firewall rules to allow HTTP traffic to those instances and TCP traffic from the GCP health checker. Then you configured and tested and internal Load Balancer for those instance groups. Let me walk you through the lab. Now, keep in mind that GCP's user interface can change, so your environment might look slightly different. So, here I am within the GCP Console, and then what the labs already done for use, we've precreated a custom mode network here, with two subnet a subnet b, within the us-central1 region. So, what we're going to do now is we're going to create some firewall rules for this network. So, first I'm going to go to firewall rules. Click on create firewall rule, and you'll notice in here actually that we've already created even pre-created some firewall rules for you specifically to allow ICMP and SSH and RDP traffic. So, what's left to do is to create the HTTP firewall rule, and then the final rule for a health checker. So, let me start off with the HTTP firewall rule. So, I'm going to give that a name specified target tags, so this is just for my load balancer back-end. I'm going to use all the source IP addresses, and this is HTTP. So it should be TCP 80 as the protocol and port. Now importantly, I need to also choose a network. I want this to apply specifically to my internal app. So, let me hit Create, and while this is creating, I can actually get started on the next firewall rule. So, let me click on that to find other name, again choose the right network, specify the target tags as load balancer back-end. The load balancer has specific IP addresses. So, I need to paste these in here one by one, and add space in between so that they're registered. I'm going to allow for the protocol TCP on all parts. So, let me click Create on that. So, now what I need to do, is I need to configure my instance templates, and instance groups. So, let me go to Compute Engine instance templates. I'm going to create an instance template. Just going to leave the name as instance-template-1, and I'm going to go down and expand this option here and under management, I'm going to define a startup script and that is going to install essentially a webpage on each of these backends that defines where the backend dislocated. You might recognize some of this being very similar from our previous lab on the HTTP load balancer. Now, for networking, I want to be very specific that this is part of my internal app, and within that in subnet a, and I'm going to put in the network tag, so that the firewall rule is attached to these instances. So, let me click Create, and I'm going to now take this and make a copy to create my next instance template. So, I can leave it as this name now what I want to do is under networking, I want to make sure that I pick the other subnet and create this as well. The reason I'm doing that is, an internal load balancer is a regional load balancer, so both my back- ends have to be within the same region, but I have them in two different subnets. So, let's go ahead and create some instance groups from these templates. So, I'm going to click on Create Instance Group. I can just leave this as the name this is going to be a single zone in us-central1, us-central1 a, I'm going to leave this manage instance group, pick my first template, set my target CPU usage for my auto-balancer, and the maximum number of instances, and modify the cool down period. So, let me click Create on that, and I'm going to repeat the same procedure for instance-group-2, which is going to be located in us-central1-b. So, these are in two different zones but within the same region. I'm going to get my other instance template, and also change the target CPU usage, the maximum number, and the cool down period, and I'm going to create that as well. So, the first instance groups that have been created, and I can see that if I navigate to my VM instances. Here's that first instance and has part of the name of the instance template, and then another identifier behind that. So, you can see that these, start with instance-group-1 and instance-group-2. If I refresh, here I can see the other one now, and so now what we're going to do is, we can see that these are both in two different set of blocks, and what I'm going to do is I'm going to create another VM now as a utility VM. So, let me just create an instance, give it a name, I am going to put it in a even different zone, and I can choose a small one here so I'm going to select a micro VM. I want to specify the network that this is in. So, let me go into network interfaces, and I want to place that in the same network which is my internal app, and I can only have the two subnets, so let me put in some that a, and let me actually give it my own custom IP address. That's the same one that is in the lab instruction. So, let me click done on that, and I'm going to create that. So, again here we have the back-ends, and the reasons.2 and.2s again those are the first available addresses, and what I'm going to do now is once my utility of VM is, up I'm going to SSH to it. Then I'm going to use this now to access my internal load balancer. The reason I'm doing this is because this VM instance is not within the network, and these are internal load balancers, and internal instances, so I want to make sure I access them from within the network. So, what I'm going to do is I'm going to just access directly the internal IP address. So, first instance-group-1, and I'll get the page that's in there and the page lists the IP address I'm coming from this is the utility VM, so we can see this is an internal connection, and it tells you where this is located in us-central1-a. Similarly, I could correlate the other instance, and we can see that this is in us-central1-b. So, these are essentially my two back-ends, and I'm going to use those now to configure my internal load balancer. So, let me exit out of here, and navigate to the Network Services tab load balancing. Create a load balancer, a TCP load balancer. Now to make this an internal load balancer and says only between VMs, and that automatically makes it a single vision only. So, let me click continue, I'm going to give this a name, and I'm going to configure the back-end. I'm going to choose the us-central1 region, and my network, and I'm going to find my back-ends. I have two instance groups, and I'm going to define both of those. Now, I can also create a health check, and I can just give that a name. This is just going to connect on TCP 80, and that's why I currently have left these instances within external IP, so that the health checker can still reach these VMs. So, I'm going to save and continue, I'm not going to configure any rules in here, this is just the front-end configuration now, I'm going to define the subnetwork where this will live in. I'm just matching the network diagram some printers and Subnet b. I'm also going to reserve a static internal IP address, and this is going to show that this IP address doesn't change, so I just need to give it a name. It's already in the network of where this load balancers in, and I can actually have a choose the internal IP address it's my networks so I can use any of my RC 1918 aerospace IPs. I'm going to reserve that, there's a cost associated to doing this. I want to do all this on port 80. So now, I'm going to click done, and I'm going to review and finalize this, here are my back-ends, two zones, my front-end, and my reserved IP address. So, I'm going to go click Create now, and wait for the load balancer to be created before moving on to the next step. So, here I'm the internal load balancer has been created, and now what I'm going to do is, I'm going to just access that internal load balancer. Since its internal, I need to go back to that utility VM that I created earlier. So, let me go to Compute Engine SSH into that VM, and because I defined the IP address, I could just copy the command directly from the lab instructions. So, the IP address for this is 10.10.30.5, and now that I'm back in here, I'm going to access that internal load balancer. We can see that I was forwarded to the us-central1-b zone. Remember I define two different zones. So, what I can do is, I can actually run this command maybe a couple times. Oops! I'm copying the zone itself, and still getting 1-b, 1-b, now I'm getting 1-a. So, you can see if I run this a couple times and let me actually forced this to run a couple times, that I'm getting different back-ends so c a b b a. So, this is being load balanced across the two different zones on the back-end, and that's the end of the lab.