Hello. In this lesson, we will talk about setting up developer portal profiles on the Apigee platform. Let's review our progress so far over the past few lessons. We bootstrapped all hosts in our Apigee planet. The bootstrapping process configures the Apigee software repository and installs critical basic utilities that the rest of the installation uses. Next, we set up Apigee Edge profiles on hosts one, three, five. The profile set that process, installs, and configures all components included in each profile. Finally, we provisioned an organization, including an environment, virtual host, and organization administrative. The next step is to set up the Apigee developer portal profiles on host six. The developer portal must be installed after organization provisioning, as it depends on the existence of an organization in order to complete. The process to set up developer portal profiles is the same as the one we used to set up Apigee Edge profiles. Here are the two profiles we will be using. The PDB profile installs a standalone PostgreSQL database without the accompanying Postgres server component that Edge uses for analytics. You do not need to use this profile if you are attaching the developer portal to the existing Edge analytics database. But for production usage, you should keep them separate. The DP profile installs the developer portal front-end, which includes Drupal and integration with the Apigee Edge management API. For the developer portal, we will need to response files. Here is the first one for the PDB profile. You can see it is similar to the response file we use for Apigee Edge, but with a number of variables emitted. The response file for the DP profile is longer and contains all the information the developer portal front-end needs to function. PG_HOST is the address of the PostgreSQL host that contains the developer portal database. This could be the address of your PostgreSQL master host for Apigee Edge analytics or your dedicated PDB_HOST if you are using a separate database. PG_USER and PG_PWD are the admin credentials for the PostgreSQL database server. They will be used to create a database and an unprivileged user for developer portal use. DEFAULT_DB should always be set to Postgres. PGE_NAME is the name of the database that will be used for the developer portal on your PostgreSQL database server. DRUPAL_PG_USER and DRUPAL_PG_PASS are the credentials of the user that will be used to log into that database. SMTP settings are similar to the ones used for Apigee Edge and should be filled out according to your mail relay configuration. DEVPORTAL_ADMIN settings defined the name and credentials for the initial sysadmin user in the developer portal. They are distinct from the sysadmin user in Apigee Edge, but you can use the same settings if you wish. EDGE_ORG is the name of the organization to which you are attaching this developer portal instance. Each developer portal can be attached to one organization at a time. MGMT_URL is the URL of your management API, including the protocol, port, and slash V1 path. DEVADMIN_USER and DEVADMIN_PWD are the credentials of a sysadmin or organization admin. They can manage the organization defined in the Edge org variable. A developer portal host system bootstrapped and is ready for the profile set up process. Let's go ahead and set up the PDB profile. Similar to the Apigee Edge profiles, the PDB profile first installs the PostgreSQL or PM package out of the Apigee software repository, then configures the component and starts the service. With our database installed, we can move on to the DP profile. The setup process installed software from the repository, configured the necessary components, and started services. During the setup, you can see that we received a couple error messages. These failures occurred because we don't have a valid mail relay in this environment. In a real environment, you should have a functional relay that you can use to send emails to users. The developer portal is now set up. We can log into the portal by accessing hosts six in a web browser on port 8079. Log in with the developer portal credentials you provided in the DP profile set up response file, and you will end up at the developer part of front page with the administrator control bar across the top. For more information on this topic, refer to our documentation. If you have any questions, please post them to our community. Thanks for watching.