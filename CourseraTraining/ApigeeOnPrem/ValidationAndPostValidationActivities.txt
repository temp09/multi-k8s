Hello. In this lesson, we will talk about validation, and post installation activities on the apigee platform. Our freshly built planet is completely functional. Over the past few lessons, we completed the installation process and now it's time to validate the platform and perform a few additional maintenance and security tasks. We provide a utility for end to end validation of the platform after the installation is complete. The utility, named apigee-validate, will set up an organization and all objects under it, as well as import and deploy a proxy. This utility can be used by the installation team to validate that the platform functions without requiring fully developed API proxies. It's a good idea to run apigee-validate after each installation to ensure that the platform is functioning as intended. The command to install the validation utility is apigee-service/apigee-validate/install. The only required input to the apigee-validate tool is the sysadmin password. You can either set the apIgee admin pw variable in a response file and pass it to the tool with a dash f option or simply type the password when prompted. Here, we will type the password. To execute the script, run apigee-service/apigee-validate setup. To clean up the configuration that the validation script created, run apigee-service/apigee-validate/clean. Enter the sysadmin password and follow the prompts. The clean action can also be run with a response file as input if desired. Here, we see the validation script in action. First, let's install the apigee-validate utility. You can see here that the utility is installed through yum from the apigee software repository. Next, we run the utility with the setup argument. When the script exits, you will receive some simple instructions for testing a sample API proxy. If you are in an internet connected environment, you can follow those instructions. Let's go ahead and run the suggested curl command. Finally, let's clean up after ourselves. After installation, you may wish to set apigee services to start when the host boots. This is not done for you automatically because it may not be necessary in every environment. To enable service autostart, run apigee all enable_autostart. To disable it, run apigee all disable_autostart. There are only two maintenance activities you will need to perform on the apigee platform. The first activity, is to execute the nodetool repair command on all Cassandra hosts once per week. Since the command will place a bit of load on the Cassandra cluster, you will want to offset the command by a few minutes on each host. In a multi-region planet, run nodetool repair dash pr instead. The nodetool command can be found at /opt/apigee/apigee-cassandra/bin. A good way to schedule the command, is with Crohn. The second activity, is to purge detailed analytics data from the analytics database nightly. You will need to run apigee-service, apigee PostgreSQL, PG data purge, followed by the organization name, the environment name, and the number of days of data you wish to retain. Aggregate reporting data will be retained but detailed data for each transaction that takes up most of the space will be removed. A good threshold for removing data is 90 days. This command can also be scheduled with Crohn. After installation completes, you will want to setup backup jobs for each host. We provide an apigee-service action to run backups. Backups are explored fully in a later module. You will also want to configure any encryption options you require for the system. We explain those options in detail in the management and security module, but it's common to enable TLS on routers, management servers, and the enterprise UI. If you wish to authenticate system users against an external directory or identity provider, this is the time to configure that as well. If you ever need to uninstall a component, run apigee-service, then the component name, followed by the uninstall action. That will leave the local configuration and data for the service but remove the binaries and scripts included in the RPM package. To completely remove apigee from a host, stop all apigee services, remove all apigee and related packages using yum, remove the apigee and engine x installation directories, and finally, remove the apigee user and group. For more information on this topic, refer to our documentation. If you have any questions, please post them on our community. Thanks for watching.