Hi everyone. In this lesson, you will receive an overview of the Apigee platform. APIs is allow you to connect applications to resources hosted on your back end systems. These APIs are deployed, and managed by an API management platform. A typical enterprise offers multiple connected digital experiences to their customers. These experiences are powered by a diverse set of applications. Applications range from mobile apps to third party systems owned by partners or customers. These applications often come with different requirements such as different types of data representation, different security models, and others. Expectations around these connected experiences are driven by business oriented KPIs. These KPIs typically require agility, faster time to market, and tailored user experiences. On the other hand, we have back end systems. The SLAs of back end systems depend on high availability, change control, and configuration management. The gap between the expectations of connected digital experiences, and back end systems often creates friction which results in a slow pace of change and lack of agility in most organizations. This disconnect is often described as two speed IT. Apigee helps to bridge the gap. APIs is deployed on Apigee can be used to break dependencies between applications and back end systems. APIs represent products that need to be managed. Apigee provides both API runtime execution and API product management. Breaking dependencies between applications and back end systems through API management with Apigee allows for faster innovation, the creation of tailored user experiences, and greater agility. At the same time, Apigee provides the availability, scalability, and security that enterprises demand. As we work to understand the role of an API management platform, it is important to understand the types of interactions API facilitate, and the stakeholders of these interactions. The Digital Value Chain captures these ideas. We read the Digital Value Chain from left to right. Companies want to provide customers with connected user experiences. These connected experiences are powered by applications. Applications are built by developers. Developers require access to resources and data which are exposed by companies through APIs. API products are built and managed by API teams. API teams coordinate with back end systems to consume data while creating API that meet the expectations of end users, and application developers. The Digital Value Chain illustrates not only the interactions that API facilitate, but also the key actors. It represents a reminder of the capabilities that an API platform should provide. With that understanding, let's explore Apigee's core capabilities. At a high level, Apigee Edge has three core capabilities. API services provide features related to API management and runtime execution, building and deploying API proxies as well as the execution of flows and policies within those proxies falls under API services. Developer services provide a collection of features to enable the interaction between the people consuming the APIs and those producing APIs. Developer portal and monetization are key for API adoption. Apigee provides rich and flexible analytics capabilities that can help address questions by business users, developers, and operations teams. APIs are products, managing products requires a clear understanding of their performance, adoption, and overall behavior. Using Apigee Edge, you can create API proxies. A proxy is a collection of XML files and resources that allow you to describe the request and response flow of an API call. Policies represent the building blocks of API proxies. They can be attached to specific points on the request and response flow, allowing you to model the behavior of a given API call Apigee Edge offers policies related to traffic management, mediation, and security as well as extensions. The developer portal provides a communication channel. It is how the team producing APIs that can interact with the developers consuming those APIs. The developer portal allows you to publish API specifications and relevant documentation. The portal provides developer self-service for registering applications and subscribing to API products. It facilitates API key distribution, and exposes application specific analytics. Monetization is a flexible, easy to use solution to realize the value of your APIs. Monetization allows you to create different revenue models, manage billing, and process payments. Monetization integrates with your developer portal allowing you to offer and manage plans for your API products. Apigee's analytics allow you to capture and visualize contextual data related to API execution, interactions between APIs and back-end systems, developers and their apps, error rates, performance, and latency and customer reporting. Apigee Edge exposes all of its functionality through APIs. Those APIs can be used for development as well as operational tasks. For example, you can deploy APIs, create users, and run analytics reports using APIs. The management API is consumed by the Apigee Edge enterprise UI as well as the installation and upgrade processes. You can use the management API for offline development, CICD automation, and other operational activities. By now, you should have a high level understanding of Apigee's core capabilities and its place within the enterprise. For more information on this topic, refer to our documentation. If you have any questions, please post them to our community. Thanks for watching.