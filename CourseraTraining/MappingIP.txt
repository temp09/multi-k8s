Regardless of whether you use an ephemeral or static IP address, the external address is unknown to the OS of the VM. The external IP address is mapped to the VMs internal address transparently by VPC. I am illustrating this here by running ifconfig within a VM in GCP, which only returns the internal IP address. Let's explore this further by looking at DNS resolution for both internal and external addresses. Let's start with internal addresses. Each instance has a host name that can be resolved to an internal IP address. This host name is the same as the instance name. There's also an internal fully qualified domain name or FQDN for an instance that uses the format shown on the slide. If you delete and recreate an instance, the internal IP address can change. This change can disrupt connections from other compute engine resources which must obtain the new IP address before they can connect again. However, the DNS name always points to a specific instance no matter what the internal IP addresse is. Each instance has a metadata server that also acts as a DNS resolver for that instance. The metadata server handles all DNS queries for local network resources and routes all other queries to Google's public DNS servers for public name resolution. I previously mentioned that an instance is not aware of any external IP address assigned to it. Instead, the network stores a lookup table that matches external IP addresses with internal IP addresses for the relevant instances. For more information including how to set up your own resolver on instances, please refer to the link below this video. Now, let's look at external addresses. Instances with external IP addresses can allow connections from host outside of the project. Users can do so directly using the external IP address. Public DNS records pointing to instances are not published automatically. However, admins can publish these using existing DNS servers. Domain and servers can be hosted on GCP using Cloud DNS. This is a managed service that is definitely worth exploring. Let's look at it in more detail. Cloud DNS is a scalable reliable and manage authoritative domain name system or DNS servers running on the same infrastructure as Google. Cloud DNS translates requests from the main names like google.com into IP addresses. Cloud DNS uses Google's global network of any cast name servers to serve your DNS zones from redundant locations around the world, providing the lower latency and high availability for your users. High availability is very important because if you can't look up a domain name, then the Internet might as well be down. That's why GCP offers a 100% uptime Service Level Agreement or SLA, for domains configured in Cloud DNS. For more information on this SLA, please refer to the link below the video. Cloud DNS lets you create an update millions of DNS records without the burden of managing your own DNS servers and software. Instead, you use a simple user interface, command-line interface or API. Another networking feature of GCP is Alias IP ranges. Alias IP ranges lets you sign a range of internal IP addresses as an alias to virtual machines network interface. This is useful if you have multiple services running on a VM and you want to assign a different IP address to each service. In essence, you can configure multiple IP addresses representing containers or applications hosted in a VM without having to define a separate network interface. You just draw the alias IP range from the local subnets primary or secondary CIDR ranges. This diagram provides a basic illustration of primary and secondary CIDR ranges and a VM Alias IP ranges. For more information on Alias IP ranges, please refer to the link below the video.