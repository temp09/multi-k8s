Hello, in this lesson we are going to
talk about Apigee Upgrade Planning. This is the first lesson of the module,
we will cover the planning and the preparation, committed before
upgrading your Apigee Planet. There are three major Apigee
software releases per year. They arrived in January, May and
September, and are numbered by year and month. The current architecture generation
of the Apigee platform is 4, so the January of 2018 release
would be named 4.18.01. A major release receives patched and
updates for one year after release. They're released as
necessary to fix bugs and vulnerabilities but
usually do not include new features. In most cases, you will have more than one
Apigee Planet in a on-prem deployment. You should upgrade nonproduction planets
before you upgrade any production planets. We do not recommend that you perform
any other infrastructure changes during the upgrade process. Perform the upgrade first, then make
changes to the installation topology, if necessary. During the upgrade planning process, you
will want to ask a number of questions, such as what is the timeline for
your upgrade? Which planets will be upgraded,
and in which order? What is the current version of Apigee? What is your planned version? And what is the upgrade path
to go from one to the other? What is the current version
of the operating system and is it supported by the new release? What are the availability requirements
during the upgrade process? How are virtual hosts and
Apigee UIs configured on load balancers? And how are health checks performed? How much disk space is available on
the hosts that will be upgraded? What are the pre and post upgrade
testing plans for API proxies? What is the post upgrade testing plan for
the Apigee Planet? When planning your upgrade, it is
important to carefully review the release notes and upgrade procedure for
the new release. We document differences and
upgrade steps based on your current version of Apigee and note any known
issues that you'll need to keep in mind. You can upgrade your Apigee planet without
downtime by carefully following all instructions, as long as you have at least
two of every service in the cluster. Ensure that each host is fully upgraded,
without any errors, before moving on to the next,
to avoid downtime. When upgrading routers remove them from
your load balancers to avoid dropping any in flight requests. While upgrade failures are rare,
they can happen. When you are planning your upgrade you
will want to review your back up and restore plan so
that you can quickly recover if needed. Most components can simply be rolled
back to their previous state, so a full restoration shouldn't be required. You'll also want to perform a backup
immediately before the upgrade takes place using the built in back up scripts,
VM snapshots or another method. New releases occasionally require
operating system configuration changes, such as adding a new software
repository or response file changes, such as adding a new variable. Review the release note for each release
carefully to determine whether any changes are needed before you
upgrade the software. Port requirements for Apigee services
should generally stay constant over time. But release will clearly call out
any changes to network configuration if they occur. Occasionally the supported version Java
will change as part of a major release. In those cases you can upgrade the JDK on
your system manually prior to the upgrade, or allow the upgrade program
to do the JDK upgrade for you. The software distribution process for
an upgrade is the same as the one used for an initial installation. Software is packaged in RPM format and distributed from a network repository or
tarball. If you are not using the Internet
repository at software.apigee.com, you will need to update
your existing mirror or create a new one with the newer
version of Apigee software. Major releases of Apigee software
can contain feature editions or deprecations, new versions of open
source components, and bug fixes. The upgrade process cares for
upgrading features and components to the latest versions for you. The upgrade must be executed
a user with root access, as RPMs will be upgraded
during the process. When an upgrade takes place,
any changes made to the /opt/apigee/customer
directory are retained as is. This ensures that any local configuration
choices you made are not changed. If you are performing an upgrade
during the window in which your weekly scheduled Cassandra node
tool repair maintenance job runs, be sure to disable that job temporarily
while you perform the upgrade. In many cases, you can upgrade Apigee
Planet without experiencing down time. Any service with redundancy can have
one instance upgraded while other instances are online. The planet we build in the installation
module has full redundancy for gateway and analytics services. So the upgrade will not impact
availability of those sub-systems. The management stack in developer
portal did not have any redundancy, so there will be a brief of their
services during the upgrade process. The addition of a second load balance
management server would prevent an outage from occurring for
users accessing the management API or UI. Remember that Cassandra availability
is calculated as the sum of replication factors divided by two plus one. So ensure that enough is available
Cassandra nodes are available in the ring to service client request. Message processor will be automatically
remove from router load balancing when they restart during the upgrade. Routers will need to be remove from your
load balancing infrastructure as they are upgraded to ensure no
in flight request are lost. You can do this directly
on the load balancer or by using the local firewall to block
the load balancer health check port 15999. Finally, note that all Apigee services
must be up during the upgrade. If you have any services that are down or
unavailable, do not start the upgrade until
they have been brought back online For more information on this topic,
refer to our documentation. If you have any questions,
please post them on our community. Thanks for watching.