Hello. In this lesson, we will discuss rolling back an upgrade and post-upgrade validation of the Apigee platform. In the previous lessons, we prepared to upgrade, bootstrapped all hosts, and executed the upgrade itself. With the upgrade complete, the final step is to validate that the upgrade was successful. In addition, in rare situations, you may need to rollback components if the upgrade fails. We will discuss both topics in this lesson. There are two situations in which you may wish to rollback: rolling back to an older release, and rolling back to an older version of the same release. In both cases, the rollback process is similar. You will stop and uninstall the existing component. If you are rolling back to a previous release, you will uninstall apigee-setup, rebootstrap to the previous release, then reinstall apigee-setup. Finally, you will install and set up the older version of the component. Note that the management server, router, message processor, Qpid server, and Postgres server all share a common code. If you have more than one of these components stacked on a single host, you will need to rollback all of them together. To perform the rollback, first, use apigee-service to stop the service associated with the component you're rolling back. For instance, apigee-service, apigee-router stop, will stop the router service. Next, run apigee-service, apigee-router uninstall to remove the router software, and apigee-service, apigee-setup uninstall to remove the current version of apigee-setup. After that, you can download and run the older version of the bootstrap script as described in the bootstrapping lesson. This will reconfigure the host to use the older version of the Apigee software repository. Now that the software is uninstalled and we are using an older version of the repository, run apigee-service, apigee-setup install to install the newer version of apigee-setup. Finally, run setup.sh as described in the profile setup lessons of the installation course to reinstall the older version of the component. Assuming that all went well and the upgrade completed without error, the next step is to validate that the platform was correctly upgraded and is functioning normally. The Apigee platform is designed to be upgraded without experiencing downtime. During the upgrade, all services should be up and you should run real or test traffic continuously. As you proceed with the upgrade, be sure to monitor your traffic flow to ensure that no unexpected errors occur. If you notice unusual traffic patterns, pause the upgrade to investigate rather than continuing on in case there is an actual problem. You should have monitoring in place to tell you when your infrastructure or the Apigee platform are unhealthy. You will likely receive some alerts during the upgrade process as services are restarted, but following the upgrade, you should check your monitoring platform to ensure that all alarms have been resolved. It is a good idea to run apigee-all status after you upgrade each host to verify that services are up. You can also run apigee-all version to see the version numbers of each installed apigee software package. In many cases, the release version such as 4.18.01 will be directly shown in the package version. For open source components, you may need to check the supported software reference at the link shown here to confirm that the correct software version is present. You can optionally run apigee-validate to ensure that the management API and underlying services are functioning normally. For details on how to run apigee-validate, see the validation lesson of the installation course. Finally, you should run your API test suites after the installation is complete, both to test the health of the platform and to catch any regressions or incompatibilities in API proxy code between versions. This is particularly important in non-production since you will want to identify and fix any issues prior to upgrading production planets. For more information on this topic, refer to our documentation. If you have any questions, please post them on our community. Thanks for watching.