So far, you've learned about projects, networks, and subnetworks, and IP addresses. Let's use what you learned to understand how GCP routes traffic and establishes firewall rules. By default, every network has routes that let instances in a network send traffic directly to each other even across subnets. In addition, every network has a default route that directs packets to destinations that are outside the network. All of these routes cover most of your normal routing needs. You can also create special routes that override these routes. Just creating a route does not ensure that your packets will be received by the specific next hop. Firewall rules must also allow the packet. The default network has preconfigured firewall rules that allow all instances in the network to talk with each other. Manually created networks do not have such rules, so you must create them as you will experience in the first lab. Routes match packets by destination IP addresses. However, no traffic will flow without also matching a firewall rule. A route is created when a network is created, enabling traffic delivery from anywhere. Also, a route is created when a subnet is created. This is what enables VM on the same network to communicate. This slide shows a simplified routing table, but let's look at this in more detail. Each route in the routes collection may apply to one or more instances. A route applies to an instance if the network and instance tags match. If the networks matches and there are no instance tag specified, the route applies to all instances in that network. Compute engine then uses the routes collection to create individual read-only routing tables for each instance. This diagram shows a massively scalable virtual router at the core of each network. Every virtual machine instance in the network is directly connected to this router and all packets leaving a virtual machine instance are first handled at this layer before they're forwarded to the next hub. The virtual network router selects the next hub for a packet by consulting the routing table for that instance. GCP firewall rules protect your virtual machine instances from unapproved connections, both inbound and outbound, known as ingress and egress respectively. Essentially, every VPC network functions as a distributed firewall. Although firewall rules are applied to networks as a whole, connections are allowed or denied at the instance level. You can think of the firewall as existing, not only between your instances and other networks but between individual instances within the same network. GCP firewall rules are stateful. This means that if a connection is allowed between a source and a target, or a target and a destination, all subsequent traffic in either direction will be allowed. In other words, firewall rules allow bi-directional communication once a session is established. Also, if for some reason all firewall rules in a network are deleted, there is still an implied deny all ingress rule and an implied allow all egress rule for the network. You can express your desired firewall configuration as a set of firewall rules. Conceptually, a firewall rule is composed of the following parameters. The direction of the rule, inbound connections are matched against ingress rules only and outbound connections are matched against egress rules only. There's the source of the connection for ingress packets or the destination of the connection for egress packets. The protocol and port of the connection where any rule can be restricted to apply to specific protocols only, or specific combinations of protocols and ports only. The action of the rule which is to allow or deny packets that match the direction, protocol, port, and source or destination of the rule. The priority of the rule which governs the order in which rules are evaluated, where the first matching rule is applied, and the rule assignment. By default, all rules are assigned to all instances, but you can assign certain rules to certain instances only as we will explore in more depth in the next module. Let's look at some GCP firewall use cases for both egress and ingress. Egress firewall rules control outgoing connections originated inside your GCP network. Egress allow rules, allow outbound connections that match specific protocol, ports, and IP addresses. Egress deny rules, prevent instances from initiating connections that match non-permitted port, protocol, and IP range combinations. For egress firewall rules, destinations to which rule applies may be specified using IP CIDR ranges. Specifically, you can use destination ranges to protect from undesired connections initiated by VM instance towards an external host as shown on the left. You could also use destination ranges to prevent undesired connections from internal VM instances to specific GCP CIDR range. This is illustrated in the middle where a VM in a specific subnet is shown attempting to connect in appropriately to another VM within the same network. Ingress firewall rules protect against incoming connections to the instance from any source. Ingress allow rules, allow specific protocol, ports, and IP addresses to connect through. The firewall prevents instances from receiving connections on non-permitted ports and protocols. Rules can be restricted to only affect particular sources. Source CIDR ranges can be used to protect any instance from undesired connections from either external networks, or from GCP IP ranges. This diagram illustrates a VM receiving a connection from an external address and another VM receiving a connection from a VM in the same network. You can control ingress connections from VM instance by constructing inbound connection conditions using source CIDR ranges, protocols, and ports