Artifactory Upgrade steps:
****************************

Artifactory binaries:
-----------------------

/var/opt/jfrog/artifactory/etc/logback.xml  -- log

/var/opt/jfrog/artifactory/etc/binarystore.xml  -- binaries

/var/opt/jfrog/artifactory/etc/db.properties  -- Db

/var/opt/jfrog/artifactory/etc/artifactory.properties  -- artifactory info

/var/opt/jfrog/artifactory/etc/artifactory.config.latest.xml  -- artifactory latest config info

/var/opt/jfrog/artifactory/etc/artifactory.system .properties  -- artifactory system info

/var/opt/jfrog/artifactory/etc/default
----------------
#!/bin/sh

#Default values
export ARTIFACTORY_HOME=/var/opt/jfrog/artifactory
export ARTIFACTORY_USER=artifactory
#export JAVA_HOME=/opt/java/1.8.0
export JAVA_HOME=/usr/java/latest

export TOMCAT_HOME=/opt/jfrog/artifactory/tomcat
export ARTIFACTORY_PID=/var/run/artifactory.pid

export JAVA_OPTIONS="-server -Xms4g -Xmx8g -Xss256k -XX:+UseG1GC -XX:OnOutOfMemoryError=\"kill -9 %p\""
export JAVA_OPTIONS="$JAVA_OPTIONS -Djruby.compile.invokedynamic=false -Dfile.encoding=UTF8 -Dartdist=rpm -Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true -Djava.security.egd=file:/dev/./urandom"
export JAVA_OPTIONS="-javaagent:/opt/jfrog/artifactory/tomcat/newrelic/newrelic.jar"

# Timeout waiting for artifactory to start
# START_TMO=60

-----------------------







The upgrade procedure involves the following main steps:


Backup:
**********

Prerequisite:
---------------

A. Backup PostgreSQL DB ( take snapshot of the VMs )
B. Backup artifactory ( take a snapshot of the VMs )
C. Take all proxy setup and https settings backup from UI before CHG start 


JDBC info for artifactory:
------------------------------
sudo vi /var/opt/jfrog/artifactory/etc/db.properties   *--- led35554 ( sandbox )

type=postgresql
driver=org.postgresql.Driver
url=jdbc:postgresql://10.50.219.71:5432/artifactory_n01
username=artifactory
password=JE2f2DQWwrcSK2DHVrTswrSXy8mLtgUUXhQnWVTa1vdcV3Xwu5




 

1. Download the package to upgrade (RPM).

    https://jfrog.com/download-legacy/?product=artifactory&installer=rpm&version=7.15.5
	
    sudo wget https://releases.jfrog.io/artifactory/artifactory-pro-rpms/artifactory-pro-rpms.repo -O jfrog-artifactory-pro-rpms.repo;
	
    sudo mv jfrog-artifactory-pro-rpms.repo /etc/yum.repos.d/;
	
    ll /etc/yum.repos.d/
    
       
2. Stop the current server

  service artifactory stop
  
3. Extract/Install the package according to the installer distribution type.  
   
   sudo yum update && sudo yum install jfrog-artifactory-pro-7.15.5
  

  
4. Check the Migration Log and review system.yaml to validate the migration was successful (only for upgrading from v6.x).
   
   migration log: $JFROG_HOME/artifactory/var/log/migration.log
   
   system.yaml configuration: $JFROG_HOME/artifactory/var/etc/system.yaml
   
4. Start the service using the start scripts or OS service management.

   service artifactory start
   
5. Reset the reverse proxy 
   
   navigate to 
   Administration > Artifactory > General > HTTP Settings adjust your Reverse Proxy Settings and generate a new configuration template
   
6. Check the Artifactory Log for the status of the service.

   tail -f $JFROG_HOME/artifactory/var/log/console.log
   
   
   
   
Xray Upgrade steps:
********************************

1. Download Xray (RPM).                  ?????
sudo wget https://releases.jfrog.io/artifactory/jfrog-xray/xray-rpm/3.17.4/jfrog-xray-3.17.4-rpm.tar.gz

*******sudo wget https://releases.jfrog.io/artifactory/jfrog-xray/xray-linux/3.17.4/jfrog-xray-3.17.4-linux.tar.gz
2. Stop the current service.

cd /opt/jfrog/xray/scripts
./xray.sh stop

3. Extract the contents of the compressed archive and go to the extracted folder.

sudo tar -xvf jfrog-xray-3.17.4-rpm.tar.gz
cd jfrog-xray-3.17.4-rpm


4. Make sure your MongoDB is running, to ensure that the migration process to PostgreSQL will work.

   ps -eflwww|grep mongo
   
4a. Run sudo ./install.sh
   
*****5. Install Xray as a service on Red Hat compatible Linux distributions, as a root user.   ?????  ( no need )

   sudo yum -y install ./xray/xray.rpm
   
6. Check that the migration has completed successfully, by reviewing the following files:

    migration log: $JFROG_HOME/xray/var/log/migration.log file

    system.yaml configuration: $JFROG_HOME/xray/var/etc/system.yaml
	
 **** This newly created file will contain your current custom configurations in the new format.

7. Please ensure that a large file handle limit is specified before you start Xray. 

8. Set the Artifactory connection details.    ??????
Xray requires a working Artifactory server and a suitable license. The Xray connection to Artifactory requires 2 parameters:
**jfrogUrl - URL to the machine where JFrog Artifactory is deployed, or the load balancer pointing to it. It is recommended to use DNS names rather than direct IPs. For example: "http://jfrog.acme.com or http://10.20.30.40:8082". Note that /artifactory context is not longer required.
Set it in the Shared Configurations section of the $JFROG_HOME/xray/var/etc/system.yaml file.
join.key - This is the "secret" key required by Artifactory for registering and authenticating the Xray server.
**You can fetch the Artifactory joinKey (join Key) from the JPD UI in the Administration module | Security | Settings | Join Key. 
Set the join.key used by your Artifactory server in the Shared Configurations section of the $JFROG_HOME/xray/var/etc/system.yaml file.

9. Make sure the third party services are running.

A. PostgreSQL

If you had the PostgreSQL database that was packaged as part of 2.x installed, the same will be used in the current installation. It can be managed using the following commands:

service postgresql-9.5 start|stop|status

B. RabbitMQ

From version 3.x, RabbitMQ is packaged and managed as part of the Xray RPM. Any action (stop, start and status) on the main service of Xray will be performed on RabbitMQ as well. The existing RabbitMQ RPM which was installed as part of 2.x can be uninstalled after Xray 3.x is successfully installed and running.

C. Migrating data from MongoDB to PostgreSQL

From version 3.x, Xray will not use MongoDB except during the migration phase. Make sure both the databases are up and running before Xray services are started. During the migration, Xray will not be accessible. You can uninstall MongoDB after Xray 3.x is successfully installed and running.

service mongod start|stop|status

10.Start Xray.

	systemd OS
	systemctl start xray.service
	systemv OS
	systemctl start xray
	Access Xray from your browser at: http://<jfrogUrl>/ui/, go the Security & Compliance tab in the Application module in the UI.

11. Check Xray Log.

tail -f $JFROG_HOME/xray/var/log/console.log


12. Post Data Migration Steps (MongoDB to PostgreSQL)

After the migration is successfully ended, it is recommended to complete the following steps:

Validate that your Xray data has migrated successfully.
Remove MongoDB configuration from the system.yaml.
Uninstall the MongoDB database.
   