 Backup sonarDB in postgesql:
 ------------------------------
 Take the snapshot for postgreSQL DB
 
[aullah@led35535 ~]$ su - postgres
su: Authentication failure
[aullah@led35535 ~]$ sudo su
[root@led35535 aullah]# su - postgres
Last login: Tue Oct  5 11:46:00 EDT 2021 on pts/1
Last failed login: Wed Oct 13 18:06:56 EDT 2021 on pts/1
There was 1 failed login attempt since the last successful login.
[postgres@led35535 ~]$ exit
logout
[root@led35535 aullah]# su - postgres
Last login: Wed Oct 13 18:07:42 EDT 2021 on pts/1
[postgres@led35535 ~]$ psql
psql (10.11)
Type "help" for help.

postgres=# pg_dump sonar > sonardb.sql

 
 
 
 
 Backup old version of sonarQube:
 ----------------------------------
  
 cd /home/aullah/
 sudo mkdir myTemp
 
 Grow size of the directory:
 --------------------------------
 
 sudo lvextend -L+4G /dev/mapper/rootvg-homelv
 
 sudo resize2fs /dev/mapper/rootvg-homelv  
 
Backup old sonarQube :
---------------------------
 sudo cp -R /opt/sonarqube-7.9.3 /home/aullah/myTemp/
 ll
 cd myTemp/
 sudo mv sonarqube-7.9.3 sonarqube-7.9.3_bk10_04_21
 
 
 sudo cp /etc/systemd/system/sonar.service /home/aullah/myTemp/sonar.service-bak10_18_2021
 
 

Install newer version of SonarQube:
-----------------------------------------
  cd /opt/
  ll
  sudo wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.0.43852.zip
  sudo unzip sonarqube-8.9.0.43852.zip
  ll
  sudo mv /opt/sonarqube-8.9.0.43852 /opt/sonarqube-8.9.0
  sudo chown -R gtsbildp:gtsbildp /opt/sonarqube-8.9.0/*
  ll /opt/sonarqube-8.9.0/conf/
  ll /opt/sonarqube-8.9.0/data/
  ll /opt/sonarqube-8.9.0/bin/
  ll /opt/sonarqube-8.9.0/bin/linux-x86-64/
  cd sonarqube-8.9.0/conf/
  
Update the sonar.properties and wrapper.properties:
-----------------------------------------------------
  sudo vi sonar.properties
  
  # DATABASE
#
# IMPORTANT:
# - The embedded H2 database is used by default. It is recommended for tests but not for
#   production use. Supported databases are Oracle, PostgreSQL and Microsoft SQLServer.
# - Changes to database connection URL (sonar.jdbc.url) can affect SonarSource licensed products.

# User credentials.
# Permissions to create tables, indices and triggers must be granted to JDBC user.
# The schema must be created first.
sonar.jdbc.username=sonar
sonar.jdbc.password=P5FrfYkJ
##############################
sonar.jdbc.username=sonar
sonar.jdbc.password=P5FrfYkJ
#####################################

#----- PostgreSQL 9.3 or greater
# By default the schema named "public" is used. It can be overridden with the parameter "currentSchema".
#sonar.jdbc.url=jdbc:postgresql://localhost/sonarqube?currentSchema=my_schema
sonar.jdbc.url=jdbc:postgresql://led35535.west.com/sonar
###########################################################################
sonar.jdbc.url=jdbc:postgresql://cicddb-west-com.0.west.com/sonar_03
###########################################################################
web server section
------------------
sonar.web.javaOpts=-Xmx512m -Xms128m -XX:+HeapDumpOnOutOfMemoryError -Dcom.sun.jndi.ldap.object.disableEndpointIdentification=true
######################################################################################################################################
sonar.web.javaOpts=-Xmx512m -Xms128m -XX:+HeapDumpOnOutOfMemoryError -Dcom.sun.jndi.ldap.object.disableEndpointIdentification=true
######################################################################################################################################
Compute Engine section:
----------------------
sonar.ce.javaOpts=-Xmx512m -Xms128m -XX:+HeapDumpOnOutOfMemoryError -Dcom.sun.jndi.ldap.object.disableEndpointIdentification=true
#######################################################################################################################################
sonar.ce.javaOpts=-Xmx512m -Xms128m -XX:+HeapDumpOnOutOfMemoryError -Dcom.sun.jndi.ldap.object.disableEndpointIdentification=true
######################################################################################################################################


#--------------------------------------------------------------------------------------------------
# UPDATE CENTER

# Update Center requires an internet connection to request https://update.sonarsource.org
# It is enabled by default.
sonar.updatecenter.activate=true


#--------------------------------------------------------------------------------------------------
# DEVELOPMENT - only for developers
# The following properties MUST NOT be used in production environments.

# Elasticsearch HTTP connector
#sonar.search.httpPort=-1

sonar.security.realm=LDAP
ldap.url=ldaps://adgc.svc.west.com:3269
ldap.bindDn=cn=P4WWCORPDS1,ou=WIC,ou=Non-Interactive,OU=Service Accounts,DC=corp,DC=westworlds,DC=com
ldap.bindPassword=Nj2VV4pPfcCtqBW
ldap.user.baseDn=DC=corp,DC=westworlds,DC=com
ldap.user.request=(&(objectClass=user)(sAMAccountName={login}))
ldap.user.realNameAttribute=displayname
ldap.user.emailAttribute=mail
ldap.group.baseDn=DC=corp,DC=westworlds,DC=com
ldap.group.request=(&(objectClass=group)(member={dn}))

  sudo vi wrapper.conf

  
# Path to JVM executable. By default it must be available in PATH.
# Can be an absolute path, for example:
#wrapper.java.command=/path/to/my/jdk/bin/java
wrapper.java.command=java

######################################
wrapper.java.command=java
#####################################


#
# DO NOT EDIT THE FOLLOWING SECTIONS
#


#********************************************************************
# Wrapper Java
#********************************************************************
wrapper.java.additional.1=-Dsonar.wrapped=true
wrapper.java.additional.2=-Djava.awt.headless=true
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp
wrapper.java.classpath.1=../../lib/jsw/*.jar
wrapper.java.classpath.2=../../lib/common/*.jar
wrapper.java.classpath.3=../../lib/*.jar
wrapper.java.library.path.1=./lib
#wrapper.java.classpath.1=../../lib/sonar-application-8.9.0.43852.jar
#wrapper.java.classpath.2=../../lib/jsw/wrapper-3.2.3.jar
#wrapper.java.classpath.3=../../lib/sonar-shutdowner-8.9.0.43852.jar
#wrapper.java.library.path.1=./lib
wrapper.app.parameter.1=org.sonar.application.App
wrapper.java.initmemory=8
wrapper.java.maxmemory=32

#********************************************************************
# Wrapper Logs
#********************************************************************

wrapper.console.format=PM
wrapper.console.loglevel=INFO
wrapper.logfile.format=M
wrapper.logfile.loglevel=INFO
#wrapper.logfile.rollmode=DATE
wrapper.logfile=../../logs/sonar.log
#wrapper.logfile=../../logs/sonar.YYYYMMDD.log

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
#wrapper.logfile.maxsize=0

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
#wrapper.logfile.maxfiles=7

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=SonarQube

# Disallow start of multiple instances of an application at the same time on Windows
wrapper.single_invocation=true

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=SonarQube

# Display name of the service
wrapper.ntservice.displayname=SonarQube

# Description of the service
wrapper.ntservice.description=SonarQube

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

#********************************************************************
# Forking Properties
#********************************************************************
wrapper.disable_restarts=TRUE
wrapper.ping.timeout=0
wrapper.shutdown.timeout=300
wrapper.jvm_exit.timeout=300
#wrapper.shutdown.timeout=0
#wrapper.jvm_exit.timeout=0

Check the sonar status:
-----------------------
  sudo systemctl status sonar
  ps aux|grep ce
  ps aux|grep elastic
  ps aux|grep compute
  ps aux|grep server
Stop old sonar:
-----------------------
  sudo /opt/sonarqube-7.9.3/bin/linux-x86-64/sonar.sh stop
  sudo /opt/sonarqube-7.9.3/bin/linux-x86-64/sonar.sh status

Start new version of sonarqube:
---------------------------------
  sudo vi /etc/systemd/system/sonar.service
  
[Unit]
Description=SonarQube Web
After=network.target

[Service]
LimitNOFILE=65536
LimitNPROC=4096
Type=forking
WorkingDirectory=/opt/sonarqube-8.9.0/bin/linux-x86-64
User=gtsbildp
ExecStart=/opt/sonarqube-8.9.0/bin/linux-x86-64/sonar.sh start
ExecStop=/opt/sonarqube-8.9.0/bin/linux-x86-64/sonar.sh stop
Restart=always
RestartSec=30

[Install]
WantedBy=multi-user.target

  sudo chown -R gtsbildp:gtsbildp /opt/sonarqube-8.9.0/temp/*
  
  sudo systemctl status sonar
  sudo systemctl daemon-reload
  sudo systemctl status sonar
  
  
  cd /home/aullah/myTemp/
  cd /home/aullah/myTemp/sonarqube-7.9.3_bk10_04_21/extensions/plugins/
  sudo cp -R sonar-* /opt/sonarqube-8.9.0/extensions/plugins/*
  
Validate upgrade:
----------------
  cat sonar.properties |grep sonar.update

  cat sonar.properties |grep sonar.update

  cd /opt/sonarqube-8.9.0/extensions/plugins/


  sudo cp -R /home/aullah/myTemp/sonarqube-7.9.3_bk10_18_21/extensions/plugins/sonar-cxx-plugin-1.3.1.1807.jar .  
  sudo chown -R gtsbildp:gtsbildp sonar-cxx-plugin-1.3.1.1807.jar
  
  sudo cp -R /home/aullah/myTemp/sonarqube-7.9.3_bk10_18_21/extensions/plugins/sonar-ansible-plugin-2.4.0.jar .  
  sudo chown -R gtsbildp:gtsbildp sonar-ansible-plugin-2.4.0.jar
  
  sudo cp -R /home/aullah/myTemp/sonarqube-7.9.3_bk10_18_21/extensions/plugins/sonar-dependency-check-plugin-2.0.8.jar .  
  sudo chown -R gtsbildp:gtsbildp sonar-dependency-check-plugin-2.0.8.jar
  
  sudo cp -R /home/aullah/myTemp/sonarqube-7.9.3_bk10_18_21/extensions/plugins/qualinsight-sonarqube-smell-plugin-4.0.0.jar .  
  sudo chown -R gtsbildp:gtsbildp qualinsight-sonarqube-smell-plugin-4.0.0.jar
  
  sudo cp -R /home/aullah/myTemp/sonarqube-7.9.3_bk10_18_21/extensions/plugins/sonar-apigee-plugin-3.0.1.jar .
  sudo chown -R gtsbildp:gtsbildp sonar-apigee-plugin-3.0.1.jar
  
  sudo cp -R /home/aullah/myTemp/sonarqube-7.9.3_bk10_18_21/extensions/plugins/sonar-yaml-plugin-1.6.0.jar .
  sudo chown -R gtsbildp:gtsbildp sonar-yaml-plugin-1.6.0.jar
 
  sudo chown -R gtsbildp:gtsbildp sonar-*

