---
# Components Installation validation in Management Server 
    - name: Check apigee servers response status
      raw: "curl -I http://{{ inventory_hostname }}:8080/v1/servers/self/reachable"
      register: apigee_resp
     
    - name: Debug
      debug:
          msg: "{{ apigee_resp.stdout }}"
          
    - name: Notify failure
      fail:
        msg: "APIGEE MGT SERVER {{ inventory_hostname }} IS REACHABLE"
      when: '"HTTP/1.1 200" not in apigee_resp.stdout'
      
#    - name: Check Openldap Process status
#      shell: /opt/apigee/apigee-service/bin/apigee-service apigee-openldap status 
#      ignore_errors: true
#      register: Openldap_status

#    - name: Debug
#      debug:
#          msg: "{{ Openldap_status.stderr }}"

#    - name: Notify failure
#      fail:
#        msg: "APIGEE OPENLDAP HAS NOT STARTED ON {{ inventory_hostname }} SERVER"
#      when: '"apigee-service: apigee-openldap: OK" not in Openldap_status.stderr'   

    - name: Check Edge UI Process status
      shell: /opt/apigee/apigee-service/bin/apigee-service edge-ui status
      ignore_errors: true
      register: edgeUI_status

    - name: Debug
      debug:
          msg: "{{ edgeUI_status.stderr }}"

    - name: Notify failure
      fail:
        msg: "APIGEE EDGE-UI HAS NOT STARTED ON {{ inventory_hostname }} SERVER"
      when: '"apigee-service: edge-ui: OK" not in edgeUI_status.stderr'

    - name: Check Edge Management Server status
      shell: /opt/apigee/apigee-service/bin/apigee-service edge-management-server status
      ignore_errors: true
      register: status

    - name: Debug
      debug:
          msg: "{{ status.stderr }}"

    - name: Notify failure
      fail:
        msg: "APIGEE MGT HAS NOT STARTED ON {{ inventory_hostname }} SERVER"
      when: '"apigee-service: edge-management-server: OK" not in status.stderr'

# POD validation

    - name: Validate the router and message processors are in "gateway-1" POD
      raw: "curl  -u ApigeeAdmin@west.com:Westpl@teng2306 http://{{ inventory_hostname }}:8080/v1/servers?pod=gateway-1"
      ignore_errors: true
      register: gateway_status

    - name: Debug
      debug:
          msg: "{{ gateway_status.stdout_lines}}"

    - name: Validate the management server is in the "central"  POD
      raw: "curl  -u ApigeeAdmin@west.com:Westpl@teng2306 http://{{ inventory_hostname }}:8080/v1/servers?pod=central"
      ignore_errors: true
      register: central_status

    - name: Debug
      debug:
          msg: "{{ central_status.stdout_lines}}"

    - name: Validate the postgres is in "analytics" POD
      raw: "curl  -u ApigeeAdmin@west.com:Westpl@teng2306 http://{{ inventory_hostname }}:8080/v1/servers?pod=analytics"
      ignore_errors: true
      register: analytics_status

    - name: Debug
      debug:
          msg: "{{ analytics_status.stdout_lines}}"

# Port 4527 validation for Message Routers from Management Server

    - name: Check Connectiviety from management server to router1
      shell: nc -vz 10.65.188.30 4527
      ignore_errors: true
      register: router1_conn

    - name: Notify failure
      fail:
        msg: "APIGEE EDGE-ROUTER HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.65.188.30:4527" not in router1_conn.stderr'

    - name: Check Connectiviety from management server to router2
      shell: nc -vz 10.65.188.31 4527
      ignore_errors: true
      register: router2_conn

    - name: Notify failure
      fail:
        msg: "APIGEE EDGE-ROUTER HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.65.188.31:4527" not in router2_conn.stderr'

    - name: Check Connectiviety from management server to router3
      shell: nc -vz 10.65.188.32 4527
      ignore_errors: true
      register: router3_conn

    - name: Notify failure
      fail:
        msg: "APIGEE EDGE-ROUTER HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.65.188.32:4527" not in router3_conn.stderr'

# Port 4528 validation for Message Processors from Management Server

    - name: Check Connectiviety from management server to message_processor1
      shell: nc -vz 10.65.188.30 4528
      ignore_errors: true
      register: message_processor1_conn

    - name: Notify failure
      fail:
        msg: "APIGEE EDGE-MESSAGE-PROCESSOR HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.65.188.30:4528" not in message_processor1_conn.stderr'

    - name: Check Connectiviety from management server to message_processor2
      shell: nc -vz 10.65.188.31 4528
      ignore_errors: true
      register: message_processor2_conn

    - name: Notify failure
      fail:
        msg: "APIGEE EDGE-MESSAGE-PROCESSOR HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.65.188.31:4528" not in message_processor2_conn.stderr'

    - name: Check Connectiviety from management server to message_processor3
      shell: nc -vz 10.65.188.32 4528
      #ignore_errors: true
      register: message_processor3_conn

    - name: Notify failure
      fail:
        msg: "APIGEE EDGE-MESSAGE-PROCESSOR HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.65.188.32:4528" not in message_processor3_conn.stderr'

# Port 4529 validation for QPID server from Management Server

    - name: Check Connectiviety from management server to qpid_server1 on SWN01
      shell: nc -vz 10.65.188.26 4529
      register: qpid_server1_conn

    - name: Notify failure
      fail:
        msg: "APIGEE EDGE-QPID-SERVER HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.65.188.26:4529" not in qpid_server1_conn.stderr'

    - name: Check Connectiviety from management server to qpid_server2 on SWN01
      shell: nc -vz 10.65.188.27 4529
      register: qpid_server2_conn

    - name: Notify failure
      fail:
        msg: "APIGEE EDGE-QPID-SERVER HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.65.188.27:4529" not in qpid_server2_conn.stderr'

    - name: Check Connectiviety from management server to qpid_server1 on DEN06
      shell: nc -vz 10.71.178.26 4529
      register: qpid_server1_conn

    - name: Notify failure
      fail:
        msg: "APIGEE EDGE-QPID-SERVER HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.71.178.26:4529" not in qpid_server1_conn.stderr'

    - name: Check Connectiviety from management server to qpid_server2 on DEN06
      shell: nc -vz 10.71.178.27 4529
      register: qpid_server2_conn

    - name: Notify failure
      fail:
        msg: "APIGEE EDGE-QPID-SERVER HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.71.178.27:4529" not in qpid_server2_conn.stderr'

# Port 4530 validation for POSTGRESQL BD from Management Server

    - name: Check Connectiviety from management server to SWN01 postgres_slave_DB
      shell: nc -vz 10.65.188.28 4530
      register: postgres_slave_DB_conn

    - name: Notify failure
      fail:
        msg: "APIGEE APIGEE-POSTGRESQL HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.65.188.28:4530" not in postgres_slave_DB_conn.stderr'

    - name: Check Connectiviety from management server to DEN06 postgres_master_DB
      shell: nc -vz 10.71.178.28 4530
      register: postgres_master_DB_conn

    - name: Notify failure
      fail:
        msg: "APIGEE APIGEE-POSTGRESQL HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.71.178.28:4530" not in postgres_master_DB_conn.stderr'

# Port 5432 validation for POSTGRESQL BD from Management Server

    - name: Check Connectiviety from management server to SWN01 with port5432 postgres_slave_DB
      shell: nc -vz 10.65.188.28 5432
      register: postgres_slave_DB_5432_conn

    - name: Notify failure
      fail:
        msg: "APIGEE APIGEE-POSTGRESQL HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.65.188.28:5432" not in postgres_slave_DB_5432_conn.stderr'

    - name: Check Connectiviety from management server to DEN06 with port5432 postgres_master_DB
      shell: nc -vz 10.71.178.28 5432
      register: postgres_master_DB_5432_conn

    - name: Notify failure
      fail:
        msg: "APIGEE APIGEE-POSTGRESQL HAS A CONNECTION TO {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.71.178.28:5432" not in postgres_master_DB_5432_conn.stderr'

# Port 8080 validation for Management API requests to Management Server

    - name: Check open port 8080 on management server1 for API Clients calls
      shell: nc -vz 10.65.188.21 8080
      register: listen_port_8080

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8080 ON {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.65.188.21:8080" not in listen_port_8080.stderr'

    - name: Check open port 8080 on management server2 for API Clients calls
      shell: nc -vz 10.71.178.21 8080
      register: listen_port_8080

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8080 ON {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.71.178.21:8080" not in listen_port_8080.stderr'

# Port 4526 validation for Management Server to manage the components

    - name: Check open port 4526 on management server1 for manage the components
      shell: nc -vz 10.65.188.21 4526
      register: listen_port_4526

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 4526 ON {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.65.188.21:4526" not in listen_port_4526.stderr'

    - name: Check open port 4526 on management server2 for manage the components
      shell: nc -vz 10.71.178.21 4526
      register: listen_port_4526

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 4526 ON {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.71.178.21:4526" not in listen_port_4526.stderr'

# Port 10389 validation for Management Server to OpenLDAP

    - name: Check open port 10389 on management server1 for openldap
      shell: nc -vz 10.65.188.21 10389
      register: listen_port_10389

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 10389 ON {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.65.188.21:10389" not in listen_port_10389.stderr'

    - name: Check open port 10389 on management server2 for openldap
      shell: nc -vz 10.71.178.21 10389
      register: listen_port_10389

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 10389 ON {{ inventory_hostname }} SERVER"
      when: '"Connected to 10.71.178.21:10389" not in listen_port_10389.stderr'

# Port 8081 validation for Management API requests to Routers

    - name: Check port 8081 for API Clients calls to Router1
      shell: nc -vz 10.65.188.30 8081
      register: listen_port_8081_R1

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8081 FROM {{ inventory_hostname }} SERVER TO ROUTER1"
      when: '"Connected to 10.65.188.30:8081" not in listen_port_8081_R1.stderr'

    - name: Check port 8081 for API Clients calls to Router2
      shell: nc -vz 10.65.188.31 8081
      register: listen_port_8081_R2

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8081 FROM {{ inventory_hostname }} SERVER TO ROUTER2"
      when: '"Connected to 10.65.188.31:8081" not in listen_port_8081_R2.stderr'

    - name: Check port 8081 for API Clients calls to Router3
      shell: nc -vz 10.65.188.32 8081
      register: listen_port_8081_R3

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8081 FROM {{ inventory_hostname }} SERVER TO ROUTER3"
      when: '"Connected to 10.65.188.32:8081" not in listen_port_8081_R3.stderr'

# Port 8082 validation for Management API requests to Message Processors      

    - name: Check port 8082 for API Clients calls to message_processor1
      shell: nc -vz 10.65.188.30 8082
      register: listen_port_8082_MP1

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8082 FROM {{ inventory_hostname }} SERVER TO message_processor1"
      when: '"Connected to 10.65.188.30:8082" not in listen_port_8082_MP1.stderr'

    - name: Check port 8082 for API Clients calls to message_processor2
      shell: nc -vz 10.65.188.31 8082
      register: listen_port_8082_MP2

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8082 FROM {{ inventory_hostname }} SERVER TO message_processor1"
      when: '"Connected to 10.65.188.31:8082" not in listen_port_8082_MP2.stderr'

    - name: Check port 8082 for API Clients calls to message_processor3
      shell: nc -vz 10.65.188.32 8082
      register: listen_port_8082_MP3

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8082 FROM {{ inventory_hostname }} SERVER TO message_processor3"
      when: '"Connected to 10.65.188.32:8082" not in listen_port_8082_MP3.stderr'

# Port 8083 validation for Management API requests through QPID      

    - name: Check port 8083 for API Clients calls to Qpid1
      shell: nc -vz 10.65.188.26 8083
      register: listen_port_8083_QP1

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8083 FROM {{ inventory_hostname }} SERVER TO Qpid1"
      when: '"Connected to 10.65.188.26:8083" not in listen_port_8083_QP1.stderr'

    - name: Check port 8083 for API Clients calls to Qpid2
      shell: nc -vz 10.65.188.27 8083
      register: listen_port_8083_QP2

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8083 FROM {{ inventory_hostname }} SERVER TO Qpid2"
      when: '"Connected to 10.65.188.27:8083" not in listen_port_8083_QP2.stderr'

# Port 8084 validation for Management API requests through POSTGRESQL      

    - name: Check port 8084 for API Clients calls to postgres_slave
      shell: nc -vz 10.65.188.28 8084
      register: listen_port_8084_POSTGRESQL_SLAVE

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8084 FROM {{ inventory_hostname }} SERVER TO postgres_slave"
      when: '"Connected to 10.65.188.28:8084" not in listen_port_8084_POSTGRESQL_SLAVE.stderr'

    - name: Check port 8084 for API Clients calls to postgres_master
      shell: nc -vz 10.71.178.28 8084
      register: listen_port_8084_POSTGRESQL_MASTER

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8084 FROM {{ inventory_hostname }} SERVER TO postgres_master"
      when: '"Connected to 10.71.178.28:8084" not in listen_port_8084_POSTGRESQL_MASTER.stderr'

# Port 2181 validation for SWN01 ZOOKEEPER Clients communications from Management server      

    - name: Check port 2181 for SWN01 Zookeeper1 Clients communication from Management servers
      shell: nc -vz 10.65.188.23 2181
      register: listen_port_2181_ZK1

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 2181 FROM {{ inventory_hostname }} SERVER TO ZK_CASS1"
      when: '"Connected to 10.65.188.23:2181" not in listen_port_2181_ZK1.stderr'

    - name: Check port 2181 for SWN01 Zookeeper2 Clients communication from Management servers
      shell: nc -vz 10.65.188.24 2181
      register: listen_port_2181_ZK2

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 2181 FROM {{ inventory_hostname }} SERVER TO ZK_CASS2"
      when: '"Connected to 10.65.188.24:2181" not in listen_port_2181_ZK2.stderr'

    - name: Check port 2181 for SWN01 Zookeeper3 Clients communication from Management servers
      shell: nc -vz 10.65.188.25 2181
      register: listen_port_2181_ZK3

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 2181 FROM {{ inventory_hostname }} SERVER TO ZK_CASS3"
      when: '"Connected to 10.65.188.25:2181" not in listen_port_2181_ZK3.stderr'

# Port 9042 validation for SWN01 CASSANDRA(CQL native transport) communications from Management server

    - name: Check port 9042 for SWN01 CASSANDRA1 communication from Management servers
      shell: nc -vz 10.65.188.23 9042
      register: listen_port_9042_CASS1

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 9042 FROM {{ inventory_hostname }} SERVER TO CASSANDRA1"
      when: '"Connected to 10.65.188.23:9042" not in listen_port_9042_CASS1.stderr'

    - name: Check port 9042 for SWN01 CASSANDRA2 communication from Management servers
      shell: nc -vz 10.65.188.24 9042
      register: listen_port_9042_CASS2

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 9042 FROM {{ inventory_hostname }} SERVER TO CASSANDRA2"
      when: '"Connected to 10.65.188.24:9042" not in listen_port_9042_CASS2.stderr'

    - name: Check port 9042 for SWN01 CASSANDRA3 communication from Management servers
      shell: nc -vz 10.65.188.25 9042
      register: listen_port_9042_CASS3

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 9042 FROM {{ inventory_hostname }} SERVER TO CASSANDRA3"
      when: '"Connected to 10.65.188.25:9042" not in listen_port_9042_CASS3.stderr'

# Port 9160 validation for SWN01 CASSANDRA(Cassandra Thrift clients) communications from Management server

    - name: Check port 9160 for SWN01 CASSANDRA1 communication from Management servers
      shell: nc -vz 10.65.188.23 9160
      register: listen_port_9160_CASS1

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 9160 FROM {{ inventory_hostname }} SERVER TO CASSANDRA1"
      when: '"Connected to 10.65.188.23:9160" not in listen_port_9160_CASS1.stderr'

    - name: Check port 9160 for SWN01 CASSANDRA2 communication from Management servers
      shell: nc -vz 10.65.188.24 9160
      register: listen_port_9160_CASS2

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 9160 FROM {{ inventory_hostname }} SERVER TO CASSANDRA2"
      when: '"Connected to 10.65.188.24:9160" not in listen_port_9160_CASS2.stderr'

    - name: Check port 9160 for SWN01 CASSANDRA3 communication from Management servers
      shell: nc -vz 10.65.188.25 9160
      register: listen_port_9160_CASS3

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 9160 FROM {{ inventory_hostname }} SERVER TO CASSANDRA3"
      when: '"Connected to 10.65.188.25:9160" not in listen_port_9160_CASS3.stderr'

# Port 2181 validation for DEN06 ZOOKEEPER Clients communications from Management server      

    - name: Check port 2181 for DEN06 Zookeeper1 Clients communication from Management servers
      shell: nc -vz 10.71.178.23 2181
      register: listen_port_2181_ZK1

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 2181 FROM {{ inventory_hostname }} SERVER TO ZK_CASS1"
      when: '"Connected to 10.71.178.23:2181" not in listen_port_2181_ZK1.stderr'

    - name: Check port 2181 for DEN06 Zookeeper2 Clients communication from Management servers
      shell: nc -vz 10.71.178.24 2181
      register: listen_port_2181_ZK2

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 2181 FROM {{ inventory_hostname }} SERVER TO ZK_CASS2"
      when: '"Connected to 10.71.178.24:2181" not in listen_port_2181_ZK2.stderr'

    - name: Check port 2181 for DEN06 Zookeeper3 Clients communication from Management servers
      shell: nc -vz 10.71.178.25 2181
      register: listen_port_2181_ZK3

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 2181 FROM {{ inventory_hostname }} SERVER TO ZK_CASS3"
      when: '"Connected to 10.71.178.25:2181" not in listen_port_2181_ZK3.stderr'

# Port 9042 validation for DEN06 CASSANDRA(CQL native transport) communications from Management server

    - name: Check port 9042 for DEN06 CASSANDRA1 communication from Management servers
      shell: nc -vz 10.71.178.23 9042
      register: listen_port_9042_CASS1

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 9042 FROM {{ inventory_hostname }} SERVER TO CASSANDRA1"
      when: '"Connected to 10.71.178.23:9042" not in listen_port_9042_CASS1.stderr'

    - name: Check port 9042 for DEN06 CASSANDRA2 communication from Management servers
      shell: nc -vz 10.71.178.24 9042
      register: listen_port_9042_CASS2

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 9042 FROM {{ inventory_hostname }} SERVER TO CASSANDRA2"
      when: '"Connected to 10.71.178.24:9042" not in listen_port_9042_CASS2.stderr'

    - name: Check port 9042 for DEN06 CASSANDRA3 communication from Management servers
      shell: nc -vz 10.71.178.25 9042
      register: listen_port_9042_CASS3

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 9042 FROM {{ inventory_hostname }} SERVER TO CASSANDRA3"
      when: '"Connected to 10.71.178.25:9042" not in listen_port_9042_CASS3.stderr'

# Port 9160 validation for DEN06 CASSANDRA(Cassandra Thrift clients) communications from Management server

    - name: Check port 9160 for DEN06 CASSANDRA1 communication from Management servers
      shell: nc -vz 10.71.178.23 9160
      register: listen_port_9160_CASS1

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 9160 FROM {{ inventory_hostname }} SERVER TO CASSANDRA1"
      when: '"Connected to 10.71.178.23:9160" not in listen_port_9160_CASS1.stderr'

    - name: Check port 9160 for DEN06 CASSANDRA2 communication from Management servers
      shell: nc -vz 10.71.178.24 9160
      register: listen_port_9160_CASS2

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 9160 FROM {{ inventory_hostname }} SERVER TO CASSANDRA2"
      when: '"Connected to 10.71.178.24:9160" not in listen_port_9160_CASS2.stderr'

    - name: Check port 9160 for DEN06 CASSANDRA3 communication from Management servers
      shell: nc -vz 10.71.178.25 9160
      register: listen_port_9160_CASS3

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 9160 FROM {{ inventory_hostname }} SERVER TO CASSANDRA3"
      when: '"Connected to 10.71.178.25:9160" not in listen_port_9160_CASS3.stderr'

# Port 8079 validation for Management server to Dev Portal

    - name: Check open port 8079 on Devportal SWN01 for Developer service calls
      shell: nc -vz 10.65.188.22 8079
      register: listen_port_8079

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8079 ON devportal SWN01 SERVER"
      when: '"Connected to 10.65.188.22:8079" not in listen_port_8079.stderr'

    - name: Check open port 8079 on Devportal DEN06 for Developer service calls
      shell: nc -vz 10.71.178.22 8079
      register: listen_port_8079

    - name: Notify failure
      fail:
        msg: "LISTENNING PORT 8079 ON devportal DEN06 SERVER"
      when: '"Connected to 10.71.178.22:8079" not in listen_port_8079.stderr'


